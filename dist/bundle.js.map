{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./scripts/baddie.js","webpack:///./scripts/baddieBullet.js","webpack:///./scripts/bullet.js","webpack:///./scripts/field.js","webpack:///./scripts/game.js","webpack:///./scripts/player.js","webpack:///./scripts/playerBullet.js","webpack:///./scripts/utilities.js"],"names":["BaddiePool","size","ctx","ImageStore","BulletPool","i","baddie","Baddie","pool","push","ObjectPool","type","setDefaultValues","storedAsset","width","height","sprite","Sprite","image","srcX","srcY","theta","speed","drawPoint","computeDrawPoint","spawned","isHit","clearRect","x","y","draw","chanceToFire","Math","floor","random","fire","cos","radius","sin","bulletSpeed","get","fireThreshold","fgCanvas","bullet","BadBullet","pathAngle","startPoint","computePoint","startRadius","endPoint","endRadius","beginPath","lineWidth","moveTo","lineTo","stroke","xOffset","yOffset","Bullet","ctxWidth","ctxHeight","undrawX","undrawY","KEY_MAP","KEY_STATUS","code","Field","pcCanvas","getContext","badBulletPool","BaddieBulletPool","pcBulletPool","PlayerBulletPool","player","Player","lastTime","Date","now","playRound","bind","checkCollisions","document","addEventListener","keydown","keyup","rect","strokeStyle","shape","xCenter","yCenter","arc","PI","render","requestAnimationFrame","clearFGContext","clearPCContext","drawFieldBorder","drawPlayerRails","drawPlayer","e","keyCode","which","preventDefault","move","spawnedPCBullets","filter","checkPlayerCollision","checkBaddieCollision","spawnedBadBullets","hitbox","hitboxCenter","bullIdx","length","pcBulletHitsPC","pcFieldWidth","pcFieldHeight","distanceFromHitboxToBullet","sqrt","pow","spawnedBaddies","badIdx","pcBulletHitsBaddie","startGame","foregroundCanvas","playerCanvas","field","getElementById","velocity","acceleration","maxSpeed","fireCharge","fireCooldown","damageFrames","portTheta","starboardTheta","bowTheta","portVertex","computePortVertex","starboardVertex","computeStarboardVertex","bowVertex","computeCenterPoints","keyStatus","left","right","fillStyle","fill","PlayerBullet","spawn","unshift","pop","splice","context","srcWidth","srcHeight","drawPointX","drawPointY","drawImage","Image","redDemon","src"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./scripts/game.js\");\n","import { Sprite, ObjectPool } from './utilities';\n\nexport default class BaddiePool extends ObjectPool {\n  constructor(size, ctx, ImageStore, BulletPool) {\n    super(size, ctx);\n    this.BulletPool = BulletPool;\n\n    for (let i = 0; i < size; i++) {\n      let baddie = new Baddie(ctx, 'redDemon', ImageStore);\n      this.pool.push(baddie);\n    }\n  }\n}\n\nclass Baddie {\n  constructor(ctx, type, ImageStore) {\n    this.ctx = ctx;\n    this.type = type;\n    this.setDefaultValues();\n    let storedAsset = ImageStore[type];\n    this.width = storedAsset.width;\n    this.height = storedAsset.height;\n    this.sprite = new Sprite(\n      ctx,\n      storedAsset.image,\n      this.width,\n      this.height,\n      storedAsset.srcX,\n      storedAsset.srcY\n    );\n  }\n\n  spawn(theta, speed) {\n    this.theta = theta;\n    this.drawPoint = this.computeDrawPoint();\n    this.speed = speed;\n    this.spawned = true;\n  }\n\n  draw(BulletPool) {\n    if(this.isHit) {\n      return true;\n    } else {\n      this.theta -= this.speed;\n      this.drawPoint = this.computeDrawPoint();\n      this.ctx.clearRect(this.x, this.y, this.width, this.height);\n      this.sprite.draw(this.drawPoint.x, this.drawPoint.y);\n\n      this.chanceToFire = Math.floor(Math.random() * 101)\n      this.fire(BulletPool);\n    }\n  }\n\n  computeDrawPoint() {\n    return({\n      x: Math.cos(this.theta) * -this.radius  + 390,\n      y: Math.sin(this.theta) * -this.radius  + 232\n    })\n  }\n\n  fire(BulletPool) {\n    // console.log('baddie.fire');\n    let bulletSpeed = 0.5;\n    BulletPool.get(this.theta, bulletSpeed);\n  }\n\n  setDefaultValues() {\n    this.isHit = false;\n    this.chanceToFire = 0;\n    this.fireThreshold = 0.01;\n    this.spawned = false;\n    this.drawPoint = {x: 400, y: 250};\n    this.speed = 0.1;\n    this.radius = 300; // The 'track' the baddie moves along\n  }\n}\n","import { Sprite, ObjectPool } from './utilities';\n\nexport default class BulletPool extends ObjectPool {\n  constructor(size, fgCanvas, type) {\n    super(size);\n\n    for (let i = 0; i < size; i++) {\n      let bullet = new BadBullet(fgCanvas, type);\n      this.pool.push(bullet);\n    }\n  }\n}\n\nclass BadBullet {\n  constructor(fgCanvas, type) {\n    this.ctx = fgCanvas.ctx;\n    this.type = type;\n    this.setDefaultValues();\n  }\n\n  spawn(theta, speed) {\n    this.pathAngle = theta;\n    this.startPoint = this.computePoint(this.startRadius);\n    this.endPoint = this.computePoint(this.endRadius);\n    this.speed = speed;\n    this.spawned = true;\n  }\n\n  draw() {\n    // ctx.clearRect(this.x, this.y, this.width, this.height); optimize later\n    this.startRadius -= this.speed;\n    this.endRadius -= this.speed;\n    this.startPoint = this.computePoint(this.startRadius);\n    this.endPoint = this.computePoint(this.endRadius);\n\n    if ((this.startPoint.y > -1 || this.endPoint.y > -1) &&\n        (this.startPoint.y < 501 || this.endPoint.y < 501) &&\n        (this.startPoint.x > -1 || this.endPoint.x > -1) &&\n        (this.startPoint.x < 801 || this.endPoint.x < 801)) {\n      this.ctx.beginPath();\n      this.ctx.lineWidth = 2;\n      this.ctx.moveTo(this.startPoint.x, this.startPoint.y);\n      this.ctx.lineTo(this.endPoint.x, this.endPoint.y);\n      this.ctx.stroke();\n    } else {\n      return true;\n    };\n  }\n\n  computePoint(radius) {\n    return ({\n      x: Math.cos(this.pathAngle) * -radius  + this.xOffset,\n      y: Math.sin(this.pathAngle) * -radius  + this.yOffset\n    })\n  }\n\n  setDefaultValues() {\n    if (this.type === 'playerBullet') {\n      this.startRadius = 12;\n      this.endRadius = -8;\n      this.xOffset = 400;\n      this.yOffset = 250;\n    } else {\n      this.startRadius = 0;\n      this.endRadius = 0;\n      this.xOffset = 400;\n      this.yOffset = 250;\n    }\n\n    this.pathAngle = 0;\n    this.startPoint = {x: 0, y: 0}\n    this.endPoint = {x: 0, y: 0}\n    this.speed = 0;\n    this.spawned = false;\n    // this.height = 10;\n    // this.width = 10;\n  }\n};\n\n// Bullet.prototype = new Sprite();\n","export default class Bullet {\n  constructor(fgCanvas, type) {\n    this.ctx = fgCanvas.ctx;\n    this.ctxWidth = fgCanvas.width;\n    this.ctxHeight = fgCanvas.height;\n    this.undrawX = fgCanvas.width + 1;\n    this.undrawY = fgCanvas.height + 1;\n    this.setDefaultValues(type);\n  }\n\n  spawn(theta, speed) {\n    this.pathAngle = theta;\n    this.startPoint = this.computePoint(this.startRadius);\n    this.endPoint = this.computePoint(this.endRadius);\n    this.speed = speed;\n    this.spawned = true;\n  }\n\n  draw() {\n    // ctx.clearRect(this.x, this.y, this.width, this.height); optimize later\n    this.startRadius -= this.speed;\n    this.endRadius -= this.speed;\n    this.startPoint = this.computePoint(this.startRadius);\n    this.endPoint = this.computePoint(this.endRadius);\n\n    if((this.startPoint.y > -1 || this.endPoint.y > -1) &&\n       (this.startPoint.y < this.undrawY || this.endPoint.y < this.undrawY) &&\n       (this.startPoint.x > -1 || this.endPoint.x > -1) &&\n       (this.startPoint.x < this.undrawX || this.endPoint.x < this.undrawX)) {\n      this.ctx.beginPath();\n      this.ctx.lineWidth = 2;\n      this.ctx.moveTo(this.startPoint.x, this.startPoint.y);\n      this.ctx.lineTo(this.endPoint.x, this.endPoint.y);\n      this.ctx.stroke();\n    } else {\n      return true;\n    };\n  }\n\n  computePoint(radius) {\n    return ({\n      x: Math.cos(this.pathAngle) * -radius  + this.xOffset,\n      y: Math.sin(this.pathAngle) * -radius  + this.yOffset\n    })\n  }\n\n  setDefaultValues(type) {\n    if(type === 'player') {\n      this.startRadius = 12;\n      this.endRadius = -8;\n    }\n    this.xOffset = this.ctxWidth / 2;\n    this.yOffset = this.ctxHeight / 2;\n    this.pathAngle = 0;\n    this.startPoint = {x: 0, y: 0}\n    this.endPoint = {x: 0, y: 0}\n    this.speed = 0;\n    this.spawned = false;\n  }\n};\n","import Player from './player';\nimport { ImageStore } from './utilities';\nimport BaddiePool from './baddie';\nimport PlayerBulletPool from './playerBullet';\nimport BaddieBulletPool from './baddieBullet';\n\nconst KEY_MAP = {\n  74: 'left',     // j\n  76: 'right',    // l\n  68: 'right',    // d\n  65: 'left',     // a\n  39: 'right',    // left arrow\n  37: 'left',     // right arrow\n  32: 'fire'      // space bar\n};\n\nconst KEY_STATUS = {};\nfor (let code in KEY_MAP) {\n  KEY_STATUS[ KEY_MAP[ code ]] = false;\n}\n\nclass Field {\n  constructor(fgCanvas, pcCanvas) {\n    this.fgCanvas = {\n      ctx: fgCanvas.getContext(\"2d\"),\n      width: 800,\n      height: 500\n    }\n    this.pcCanvas = {\n      ctx: pcCanvas.getContext(\"2d\"),\n      width: 100,\n      height: 100\n    }\n\n    fgCanvas.width = this.fgCanvas.width;\n    fgCanvas.height = this.fgCanvas.height;\n    pcCanvas.width = this.pcCanvas.width;\n    pcCanvas.height = this.pcCanvas.height;\n\n    this.ImageStore = new ImageStore();\n    this.badBulletPool = new BaddieBulletPool(20, this.fgCanvas, 'demonBullet');\n    this.pcBulletPool = new PlayerBulletPool(8, this.fgCanvas);\n    this.BaddiePool = new BaddiePool(\n      1, this.fgCanvas.ctx, this.ImageStore, this.badBulletPool\n    );\n    this.player = new Player(this.pcCanvas, this.pcBulletPool);\n    this.lastTime = Date.now;\n\n    this.playRound = this.playRound.bind(this);\n    this.checkCollisions = this.checkCollisions.bind(this);\n    // this.checkPlayerCollision = this.checkPlayerCollision.bind(this);\n\n    document.addEventListener('keydown', this.keydown.bind(this));\n    document.addEventListener('keyup', this.keyup.bind(this));\n  }\n\n  drawFieldBorder() {\n    this.fgCanvas.ctx.beginPath();\n    this.fgCanvas.ctx.lineWidth = 1;\n    this.fgCanvas.ctx.rect(0, 0, this.fgCanvas.width, this.fgCanvas.height);\n    this.fgCanvas.ctx.strokeStyle = 'black';\n    this.fgCanvas.ctx.stroke();\n\n    // this.pcCanvas.ctx.beginPath();\n    // this.pcCanvas.ctx.lineWidth = 1;\n    // this.pcCanvas.ctx.rect(0, 0, this.pcCanvas.width, this.pcCanvas.height);\n    // this.pcCanvas.ctx.strokeStyle = 'black';\n    // this.pcCanvas.ctx.stroke();\n  }\n\n  drawPlayerRails(shape) {\n    let xCenter = this.pcCanvas.width / 2;\n    let yCenter = this.pcCanvas.height / 2;\n\n    switch (shape) {\n      case 'circle':\n      default:\n      this.pcCanvas.ctx.beginPath();\n      this.pcCanvas.ctx.arc(xCenter, yCenter, 35, 0, 2 * Math.PI, true);\n      this.pcCanvas.ctx.strokeStyle = \"black\";\n      this.pcCanvas.ctx.lineWidth = 2;\n      this.pcCanvas.ctx.stroke();\n    }\n  }\n\n  playRound() {\n    let now = Date.now();\n    // let dt = (now - this.lastTime) / 1000.0;\n\n    // update(dt);\n    this.render();\n\n    this.lastTime = now;\n    requestAnimationFrame(this.playRound);\n  }\n\n  render()  {\n    this.clearFGContext();\n    this.clearPCContext();\n    this.drawFieldBorder();\n    this.drawPlayerRails('circle');\n    this.checkCollisions();\n    this.drawPlayer();\n    this.pcBulletPool.draw('player');\n    this.BaddiePool.get(Math.PI / 2, 0.005);\n    this.BaddiePool.draw();\n  }\n\n  keydown(e) {\n    let keyCode = e.which || e.keyCode || 0;\n    if (KEY_MAP[keyCode]) {\n      e.preventDefault();\n      KEY_STATUS[KEY_MAP[keyCode]] = true;\n    }\n  }\n\n  keyup(e) {\n    let keyCode = e.which || e.keyCode || 0;\n    if (KEY_MAP[keyCode]) {\n      e.preventDefault();\n      KEY_STATUS[KEY_MAP[keyCode]] = false;\n    }\n  }\n\n  drawPlayer() {\n    this.player.move(KEY_STATUS);\n    this.player.draw();\n  }\n\n  checkCollisions() {\n    let spawnedPCBullets = this.pcBulletPool.pool.filter(\n      (bullet) => bullet.spawned )\n    this.checkPlayerCollision(spawnedPCBullets);\n    this.checkBaddieCollision(spawnedPCBullets);\n  }\n\n  checkPlayerCollision(spawnedPCBullets) {\n    let spawnedBadBullets = this.badBulletPool.pool.filter(\n      (bullet) => bullet.spawned )\n\n    let hitbox = {\n      x: this.player.hitboxCenter.x,\n      y: this.player.hitboxCenter.y,\n      radius: 9\n    }\n\n    for (var bullIdx = 0; bullIdx < spawnedPCBullets.length; bullIdx++) {\n      let bullet = spawnedPCBullets[bullIdx];\n      if(\n        this.pcBulletHitsPC(this.player, hitbox, bullet.startPoint) ||\n        this.pcBulletHitsPC(this.player, hitbox, bullet.endPoint)\n      ) {\n        this.player.isHit();\n      };\n    }\n  }\n\n  pcBulletHitsPC(player, hitbox, bullet) {\n    hitbox.x = hitbox.x - player.pcFieldWidth / 2 + this.fgCanvas.width / 2;\n    hitbox.y = hitbox.y - player.pcFieldHeight / 2 + this.fgCanvas.height / 2;\n    let distanceFromHitboxToBullet =\n      Math.sqrt(Math.pow(hitbox.x - bullet.x, 2)) +\n      Math.sqrt(Math.pow(hitbox.y - bullet.y, 2));\n\n    return (\n      distanceFromHitboxToBullet <= hitbox.radius\n    )\n  }\n\n  checkBaddieCollision(spawnedPCBullets) {\n    let spawnedBaddies = this.BaddiePool.pool.filter(\n      (baddie) => baddie.spawned )\n\n    for (let badIdx = 0; badIdx < spawnedBaddies.length; badIdx++) {\n      let baddie = spawnedBaddies[badIdx];\n      for (let bullIdx = 0; bullIdx < spawnedPCBullets.length; bullIdx++) {\n        let bullet = spawnedPCBullets[bullIdx];\n        let drawPoint = baddie.drawPoint;\n        if(\n          this.pcBulletHitsBaddie(baddie, drawPoint, bullet.startPoint) ||\n          this.pcBulletHitsBaddie(baddie, drawPoint, bullet.endPoint)\n        ) {\n          baddie.isHit = true;\n        };\n      }\n    }\n  }\n\n  pcBulletHitsBaddie(baddie, drawPoint, bullet) {\n    return (\n      (drawPoint.x <= bullet.x && bullet.x <= drawPoint.x + baddie.width) &&\n      (drawPoint.y <= bullet.y && bullet.y <= drawPoint.y + baddie.height)\n    )\n  }\n\n    // spawnedBaddies.forEach((baddie) => {\n    //   spawnedPCBullets.forEach((bullet) => {\n    //     if bullet.startPoint.x\n    //     let bulletStart\n    //   })\n    // })\n\n    // debugger\n    // this.BaddiePool.pool.forEach((baddie) => {\n    //   debugger\n    //   let badX = baddie.drawPoint.x;\n    //   let badY = baddie.drawPoint.y;\n    //   this.pcBulletPool.pool.forEach((bullet) => {\n    //     debugger\n    //     console.log(`bullet ${bullet.startPoint.x}`);\n    //     console.log(`baddie ${baddie.drawPoint.x}`);\n    //     if(\n    //       (bullet.startPoint.x <= badX && bullet.startPoint.x >= badX + 20) ||\n    //       (bullet.endPoint.x <= badX && bullet.endPoint.x >= badX + 20) ||\n    //       (bullet.startPoint.y <= badY && bullet.startPoint.y >= badY + 30) ||\n    //       (bullet.endPoint.y <= badY && bullet.startPoint.y >= badY + 30)\n    //     ) {\n    //       console.log('hit!');\n    //     }\n    //   })\n    //\n    // })\n  // }\n\n  clearFGContext() {\n    this.fgCanvas.ctx.clearRect(0, 0, this.fgCanvas.width, this.fgCanvas.height);\n  } // implement dirty rectangles on each sprite?\n\n  clearPCContext() {\n    this.pcCanvas.ctx.clearRect(0, 0, this.pcCanvas.width, this.pcCanvas.height);\n  } // implement dirty rectangles on each sprite?\n}\n\n\nexport default Field;\n","import Field from './field';\n\nconst startGame = (foregroundCanvas, playerCanvas) => {\n  let field = new Field(foregroundCanvas, playerCanvas);\n\n  field.playRound();\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let foregroundCanvas = document.getElementById(\"foregroundCanvas\");\n  let playerCanvas = document.getElementById(\"playerCanvas\");\n  startGame(foregroundCanvas, playerCanvas);\n});\n","class Player {\n  constructor(pcCanvas, BulletPool) {\n    this.ctx = pcCanvas.ctx;\n    this.pcFieldWidth = pcCanvas.width;\n    this.pcFieldHeight = pcCanvas.height;\n    this.BulletPool = BulletPool;\n\n    this.velocity = 0;\n    this.acceleration = 0.03;\n    this.maxSpeed = 0.3;\n    this.radius = 30; // The 'track' the player moves along\n    this.fireCharge = 0;\n    this.fireCooldown = 25;\n    this.damageFrames = 100;\n\n    this.portTheta = -1.23;\n    this.starboardTheta = 1.9106;\n    this.bowTheta = Math.PI / 2;\n    this.portVertex = this.computePortVertex();\n    this.starboardVertex = this.computeStarboardVertex();\n    this.bowVertex = this.computeCenterPoints(-10);\n    this.hitboxCenter = this.computeCenterPoints(-22);\n\n    this.draw = this.draw.bind(this);\n    this.fire = this.fire.bind(this);\n  }\n\n  computeStarboardVertex() {\n    return ({\n      x: Math.cos(this.starboardTheta) * this.radius + this.pcFieldWidth / 2,\n      y: -Math.sin(this.starboardTheta) * this.radius + this.pcFieldHeight / 2\n    })\n  }\n\n  computePortVertex() {\n    return ({\n      x: Math.cos(this.portTheta) * this.radius  + this.pcFieldWidth / 2,\n      y: Math.sin(this.portTheta) * this.radius  + this.pcFieldHeight / 2\n    })\n  }\n\n  computeCenterPoints(radius) {\n    return ({\n      x: Math.cos(this.bowTheta) * radius  + this.pcFieldWidth / 2,\n      y: Math.sin(this.bowTheta) * radius  + this.pcFieldHeight / 2\n    })\n  }\n\n  move(keyStatus) {\n    this.fireCharge++; // increments once every frame\n    this.damageFrames++; // increments once every frame\n    if(keyStatus.left) {\n      if(this.velocity <= this.maxSpeed) this.velocity += this.acceleration;\n      this.starboardTheta += this.velocity;\n      this.portTheta -= this.velocity;\n      this.bowTheta -= this.velocity;\n    } else if(keyStatus.right) {\n      if(this.velocity <= this.maxSpeed) this.velocity += this.acceleration;\n      this.starboardTheta -= this.velocity;\n      this.portTheta += this.velocity;\n      this.bowTheta += this.velocity;\n    } else {\n      this.velocity = 0;\n    }\n\n    if(keyStatus.fire && this.fireCharge >= this.fireCooldown) this.fire();\n  }\n\n  fire() {\n    this.fireCharge = 0;\n    let bulletSpeed = 3.5;\n    this.BulletPool.get(this.bowTheta, bulletSpeed);\n  }\n\n  draw() {\n    this.starboardVertex = this.computeStarboardVertex();\n    this.portVertex = this.computePortVertex();\n    this.bowVertex = this.computeCenterPoints(-10);\n    this.hitboxCenter = this.computeCenterPoints(-22);\n\n    this.ctx.beginPath();\n\n    if(this.damageFrames < 50) {\n      this.ctx.fillStyle = 'red';\n    } else {\n      if(this.fireCharge > this.fireCooldown) {\n        this.ctx.fillStyle = 'blue';\n      } else {\n        this.ctx.fillStyle = 'black';\n      }\n    }\n\n    this.ctx.moveTo(this.starboardVertex.x, this.starboardVertex.y);\n    this.ctx.lineTo(this.portVertex.x, this.portVertex.y);\n    this.ctx.lineTo(this.bowVertex.x, this.bowVertex.y);\n    this.ctx.fill();\n  }\n\n  isHit() {\n    this.damageFrames = 0;\n  }\n}\n\nexport default Player;\n","import { Sprite, ObjectPool } from './utilities';\nimport Bullet from './bullet';\n\nexport default class BulletPool extends ObjectPool {\n  constructor(size, fgCanvas) {\n    super(size);\n\n    for(let i = 0; i < size; i++) {\n      let bullet = new PlayerBullet(fgCanvas);\n      this.pool.push(bullet);\n    }\n  }\n}\n\nclass PlayerBullet extends Bullet {\n  constructor(fgCanvas) {\n    super(fgCanvas, 'player');\n  }\n};\n\n// Bullet.prototype = new Sprite();\n","export class ObjectPool {\n  constructor(size) {\n    this.size = size;\n    this.pool = [];\n  }\n\n  get(theta, speed) {\n    if(!this.pool[this.size - 1].spawned) {\n      this.pool[this.size - 1].spawn(theta, speed);\n      this.pool.unshift(this.pool.pop());\n    }\n  }\n\n  draw(type) {\n    for (let i = 0; i < this.size; i++) {\n      if(this.pool[i].spawned) {\n        if(this.pool[i].draw(this.BulletPool)) {\n          this.pool[i].setDefaultValues(type);\n          this.pool.push((this.pool.splice(i,1))[0]);\n        }\n      } else {\n        break;\n      }\n    }\n  }\n};\n\nexport class Sprite {\n  constructor(context, image, srcWidth, srcHeight, srcX, srcY) {\n    this.context = context;\n    this.image = image;\n    this.srcX = srcX;\n    this.srcY = srcY;\n    this.srcWidth = srcWidth;\n    this.srcHeight = srcHeight;\n\n    this.draw = this.draw.bind(this);\n  }\n\n  draw(drawPointX, drawPointY) {\n    this.context.drawImage(\n      this.image,\n      this.srcX,\n      this.srcY,\n      this.srcWidth,\n      this.srcHeight,\n      drawPointX,\n      drawPointY,\n      this.srcWidth,  // drawn image width, same as src\n      this.srcHeight  // drawn image height, same as src\n    )\n  }\n}\n\nexport class ImageStore {\n  constructor() {\n    this.bullet = { image: new Image() }\n    this.redDemon = {\n      image: new Image(),\n      width: 21,\n      height: 30,\n      srcX: 0,\n      srcY: 0\n    }\n    // this.numImages = 2;\n    // this.numLoaded = 0;\n    //\n    // this.bullet.onload = () => {\n    //   this.imageLoaded();\n    // }\n\n    this.bullet.image.src = 'assets/sprites/bullet.png';\n    this.redDemon.image.src = 'assets/sprites/demon_test.png';\n\n  }\n\n  // imageLoaded() {\n  //   this.numLoaded++;\n  //   if(this.numLoaded === this.numImages) game.playRound();\n  // }\n}\n"],"sourceRoot":""}