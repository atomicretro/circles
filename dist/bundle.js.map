{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./scripts/baddie.js","webpack:///./scripts/baddieBullet.js","webpack:///./scripts/bullet.js","webpack:///./scripts/field.js","webpack:///./scripts/game.js","webpack:///./scripts/player.js","webpack:///./scripts/playerBullet.js","webpack:///./scripts/utilities.js"],"names":["BaddiePool","size","ctx","ImageStore","BulletPool","i","baddie","Baddie","pool","push","ObjectPool","type","setDefaultValues","storedAsset","width","height","sprite","Sprite","image","srcX","srcY","baddieData","theta","drawPoint","computeDrawPoint","speed","spawned","clear","isHit","draw","x","y","chanceToFire","Math","floor","random","fireThreshold","fire","cos","radius","sin","clearRect","bulletData","startPoint","get","fgCanvas","bullet","BadBullet","pathAngle","computePoint","endPoint","startRadius","endRadius","Bullet","ctxWidth","ctxHeight","undrawX","undrawY","beginPath","lineWidth","moveTo","lineTo","stroke","startX","startY","xOffset","yOffset","KEY_MAP","KEY_STATUS","code","Field","statsCanvas","pcCanvas","getContext","badBulletPool","BaddieBulletPool","pcBulletPool","PlayerBulletPool","player","Player","lastTime","Date","now","playerScore","heart","startRound","bind","playRound","checkCollisions","document","addEventListener","keydown","keyup","drawStatusBar","render","requestAnimationFrame","clearPCContext","updatePlayerCharge","drawPlayerRails","drawPlayer","PI","e","keyCode","which","preventDefault","fillStyle","fillRect","font","fillText","drawPlayerHearts","strokeStyle","strokeRect","life","fireCharge","shape","xCenter","yCenter","arc","move","spawnedPCBullets","filter","checkPlayerCollision","checkBaddieCollision","spawnedBadBullets","hitbox","hitboxCenter","bullIdx","length","bulletHitsPC","invincibilityFrames","pcFieldWidth","pcFieldHeight","distanceFromHitboxToBullet","sqrt","pow","spawnedBaddies","badIdx","pcBulletHitsBaddie","updatePlayerScore","startGame","foregroundCanvas","playerCanvas","field","getElementById","velocity","acceleration","maxSpeed","fireCooldown","portTheta","starboardTheta","bowTheta","computeAllVerticies","portVertex","computePortVertex","starboardVertex","computeStarboardVertex","bowVertex","computeCenterPoints","keyStatus","left","right","fill","PlayerBullet","objectData","spawn","unshift","pop","splice","context","srcWidth","srcHeight","drawPointX","drawPointY","drawImage","Image","redDemon","numImages","numLoaded","ready","onload","imageLoaded","src"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./scripts/game.js\");\n","import { Sprite, ObjectPool } from './utilities';\n\nexport default class BaddiePool extends ObjectPool {\n  constructor(size, ctx, ImageStore, BulletPool) {\n    super(size, ctx);\n    this.BulletPool = BulletPool;\n\n    for (let i = 0; i < size; i++) {\n      let baddie = new Baddie(ctx, 'redDemon', ImageStore);\n      this.pool.push(baddie);\n    }\n  }\n};\n\nclass Baddie {\n  constructor(ctx, type, ImageStore) {\n    this.ctx = ctx;\n    this.type = type;\n    this.setDefaultValues();\n    let storedAsset = ImageStore[type];\n    this.width = storedAsset.width;\n    this.height = storedAsset.height;\n    this.sprite = new Sprite(\n      ctx,\n      storedAsset.image,\n      this.width,\n      this.height,\n      storedAsset.srcX,\n      storedAsset.srcY\n    );\n  }\n\n  spawn(baddieData) {\n    this.theta = baddieData.theta;\n    this.drawPoint = this.computeDrawPoint();\n    this.speed = baddieData.speed;\n    this.spawned = true;\n  }\n\n  draw(BulletPool) {\n    this.clear();\n    if(this.isHit) {\n      this.clear();\n      return true;\n    } else {\n      this.theta -= this.speed;\n      this.drawPoint = this.computeDrawPoint();\n      this.sprite.draw(this.drawPoint.x, this.drawPoint.y);\n\n      this.chanceToFire = Math.floor(Math.random() * 101)\n      if (this.chanceToFire/100 < this.fireThreshold) {\n        this.fire(BulletPool);\n      }\n    }\n  }\n\n  computeDrawPoint() {\n    return({\n      x: Math.cos(this.theta) * -this.radius  + 390,\n      y: Math.sin(this.theta) * -this.radius  + 232\n    })\n  }\n\n  clear() {\n    this.ctx.clearRect(\n      this.drawPoint.x - 5,\n      this.drawPoint.y - 5,\n      this.width + 10,\n      this.height + 10\n    );\n  }\n\n  fire(BulletPool) {\n    let bulletData = {\n      theta: this.theta,\n      speed: 4,\n      radius: this.radius,\n      startPoint: {\n        x: this.drawPoint.x + this.width / 2,\n        y: this.drawPoint.y + this.height / 2\n      }\n    };\n    BulletPool.get(bulletData);\n  }\n\n  setDefaultValues() {\n    this.isHit = false;\n    this.chanceToFire = 0;\n    this.fireThreshold = 0.01;\n    this.spawned = false;\n    this.drawPoint = {x: 400, y: 250};\n    this.speed = 0.1;\n    this.radius = 300; // The 'track' the baddie moves along\n  }\n};\n","import { Sprite, ObjectPool } from './utilities';\nimport Bullet from './bullet';\n\nexport default class BulletPool extends ObjectPool {\n  constructor(size, fgCanvas, type) {\n    super(size);\n\n    for (let i = 0; i < size; i++) {\n      let bullet = new BadBullet(fgCanvas, type);\n      this.pool.push(bullet);\n    }\n  }\n}\n\nclass BadBullet extends Bullet {\n  constructor(fgCanvas, type) {\n    super(fgCanvas, type);\n  }\n\n  spawn(bulletData) {\n    // debugger\n    this.pathAngle = bulletData.theta;\n    this.speed = bulletData.speed;\n    this.startPoint = this.computePoint(bulletData.radius);\n    this.endPoint = this.computePoint(bulletData.radius - 20);\n    this.startRadius = bulletData.radius;\n    this.endRadius = bulletData.radius - 20;\n    this.spawned = true;\n  }\n};\n\n// Bullet.prototype = new Sprite();\n","export default class Bullet {\n  constructor(fgCanvas, type) {\n    this.ctx = fgCanvas.ctx;\n    this.ctxWidth = fgCanvas.width;\n    this.ctxHeight = fgCanvas.height;\n    this.undrawX = fgCanvas.width + 5;\n    this.undrawY = fgCanvas.height + 5;\n    this.setDefaultValues(type);\n  }\n\n  draw() {\n    this.clear()\n    this.startRadius -= this.speed;\n    this.endRadius -= this.speed;\n    this.startPoint = this.computePoint(this.startRadius);\n    this.endPoint = this.computePoint(this.endRadius);\n\n    if((this.startPoint.y > -5 || this.endPoint.y > -5) &&\n       (this.startPoint.y < this.undrawY || this.endPoint.y < this.undrawY) &&\n       (this.startPoint.x > -5 || this.endPoint.x > -5) &&\n       (this.startPoint.x < this.undrawX || this.endPoint.x < this.undrawX)) {\n      this.ctx.beginPath();\n      this.ctx.lineWidth = 2;\n      this.ctx.moveTo(this.startPoint.x, this.startPoint.y);\n      this.ctx.lineTo(this.endPoint.x, this.endPoint.y);\n      this.ctx.stroke();\n    } else {\n      return true;\n    };\n  }\n\n  clear() {\n    let startX;\n    let startY;\n\n    if(this.startPoint.x > this.endPoint.x) {\n      startX = this.endPoint.x;\n    } else {\n      startX = this.startPoint.x;\n    }\n    if(this.startPoint.y > this.endPoint.y) {\n      startY = this.endPoint.y;\n    } else {\n      startY = this.startPoint.y;\n    }\n\n    this.ctx.clearRect(startX - 5, startY - 5, 30, 30);\n  }\n\n  computePoint(radius) {\n    return ({\n      x: Math.cos(this.pathAngle) * -radius + this.xOffset,\n      y: Math.sin(this.pathAngle) * -radius + this.yOffset\n    })\n  }\n\n  setDefaultValues(type) {\n    if(type === 'player') {\n      this.startRadius = 12;\n      this.endRadius = -8;\n    }\n    this.xOffset = this.ctxWidth / 2;\n    this.yOffset = this.ctxHeight / 2;\n    this.pathAngle = 0;\n    this.startPoint = {x: 0, y: 0}\n    this.endPoint = {x: 0, y: 0}\n    this.speed = 0;\n    this.spawned = false;\n  }\n};\n","import Player from './player';\nimport { ImageStore, Sprite } from './utilities';\nimport BaddiePool from './baddie';\nimport PlayerBulletPool from './playerBullet';\nimport BaddieBulletPool from './baddieBullet';\n\nconst KEY_MAP = {\n  74: 'left',     // j\n  76: 'right',    // l\n  68: 'right',    // d\n  65: 'left',     // a\n  39: 'right',    // left arrow\n  37: 'left',     // right arrow\n  32: 'fire'      // space bar\n};\n\nconst KEY_STATUS = {};\nfor (let code in KEY_MAP) {\n  KEY_STATUS[ KEY_MAP[ code ]] = false;\n}\n\nclass Field {\n  constructor(fgCanvas, statsCanvas, pcCanvas) {\n    this.fgCanvas = {\n      ctx: fgCanvas.getContext(\"2d\"),\n      width: 800,\n      height: 500\n    }\n    this.statsCanvas = {\n      ctx: statsCanvas.getContext(\"2d\"),\n      width: 800,\n      height: 25\n    }\n    this.pcCanvas = {\n      ctx: pcCanvas.getContext(\"2d\"),\n      width: 150,\n      height: 150\n    }\n\n    fgCanvas.width = this.fgCanvas.width;\n    fgCanvas.height = this.fgCanvas.height;\n    pcCanvas.width = this.pcCanvas.width;\n    pcCanvas.height = this.pcCanvas.height;\n\n    this.ImageStore = new ImageStore(this);\n    this.badBulletPool = new BaddieBulletPool(1, this.fgCanvas, 'demonBullet');\n    this.pcBulletPool = new PlayerBulletPool(8, this.fgCanvas);\n    this.BaddiePool = new BaddiePool(\n      1, this.fgCanvas.ctx, this.ImageStore, this.badBulletPool\n    );\n    this.player = new Player(this.pcCanvas, this.pcBulletPool);\n    this.lastTime = Date.now;\n\n    this.playerScore = 0;\n    this.heart = new Sprite(\n      this.statsCanvas.ctx, this.ImageStore.heart.image, 13, 13, 0, 0\n    )\n\n    this.startRound = this.startRound.bind(this);\n    this.playRound = this.playRound.bind(this);\n    this.checkCollisions = this.checkCollisions.bind(this);\n    // this.checkPlayerCollision = this.checkPlayerCollision.bind(this);\n\n    document.addEventListener('keydown', this.keydown.bind(this));\n    document.addEventListener('keyup', this.keyup.bind(this));\n  }\n\n  startRound() {\n    this.drawStatusBar();\n    this.playRound();\n  }\n\n  playRound() {\n    // let now = Date.now();\n    // let dt = (now - this.lastTime) / 1000.0;\n\n    // update(dt);\n    // this.drawStatusBar();\n    this.render();\n\n    // this.lastTime = now;\n    requestAnimationFrame(this.playRound);\n  }\n\n  render()  {\n    // this.clearFGContext();\n    this.clearPCContext();\n    this.updatePlayerCharge()\n    this.drawPlayerRails('circle');\n    this.checkCollisions();\n    this.drawPlayer();\n    this.BaddiePool.get({ theta: Math.PI / 2, speed: 0.005 });\n    this.BaddiePool.draw();\n    this.pcBulletPool.draw('player');\n    this.badBulletPool.draw();\n  }\n\n  keydown(e) {\n    let keyCode = e.which || e.keyCode || 0;\n    if (KEY_MAP[keyCode]) {\n      e.preventDefault();\n      KEY_STATUS[KEY_MAP[keyCode]] = true;\n    }\n  }\n\n  keyup(e) {\n    let keyCode = e.which || e.keyCode || 0;\n    if (KEY_MAP[keyCode]) {\n      e.preventDefault();\n      KEY_STATUS[KEY_MAP[keyCode]] = false;\n    }\n  }\n\n  drawStatusBar() {\n    this.statsCanvas.ctx.fillStyle = 'white';\n    this.statsCanvas.ctx.fillRect(\n      0, 0, this.statsCanvas.width, this.statsCanvas.height\n    );\n\n    this.statsCanvas.ctx.fillStyle = 'black';\n    this.statsCanvas.ctx.font = \"16px Arial\";\n    this.statsCanvas.ctx.fillText(\"0\", 100, 19);\n\n    this.drawPlayerHearts();\n\n    this.statsCanvas.ctx.strokeStyle = 'blue';\n    this.statsCanvas.ctx.strokeRect(634, 6, 98, 13);\n  }\n\n  drawPlayerHearts() {\n    this.statsCanvas.ctx.clearRect(399, 5, 200, 20);\n    for(let i = 0; i < this.player.life; i++) {\n      this.heart.draw(400 + (i * 20), 6)\n    }\n  }\n\n  updatePlayerScore() {\n    this.playerScore += 100;\n    this.statsCanvas.ctx.clearRect(99, 5, 200, 20);\n    this.statsCanvas.ctx.fillStyle = 'black';\n    this.statsCanvas.ctx.font = \"16px Arial\";\n    this.statsCanvas.ctx.fillText(`${this.playerScore}`, 100, 19);\n  }\n\n  updatePlayerCharge() {\n    if(this.player.fireCharge === 0) {\n      this.statsCanvas.ctx.clearRect(635, 7, 96, 11)\n    } else if(this.player.fireCharge < 25) {\n      this.statsCanvas.ctx.fillStyle = 'blue';\n      this.statsCanvas.ctx.fillRect(635, 7, this.player.fireCharge * 4, 11);\n    }\n  }\n\n  drawPlayerRails(shape) {\n    let xCenter = this.pcCanvas.width / 2;\n    let yCenter = this.pcCanvas.height / 2;\n\n    switch (shape) {\n      case 'circle':\n      default:\n      this.pcCanvas.ctx.beginPath();\n      this.pcCanvas.ctx.arc(xCenter, yCenter, 60, 0, 2 * Math.PI, true);\n      this.pcCanvas.ctx.strokeStyle = \"black\";\n      this.pcCanvas.ctx.lineWidth = 2;\n      this.pcCanvas.ctx.stroke();\n    }\n  }\n\n  drawPlayer() {\n    this.player.move(KEY_STATUS);\n    this.player.draw();\n  }\n\n  checkCollisions() {\n    let spawnedPCBullets = this.pcBulletPool.pool.filter(\n      (bullet) => bullet.spawned )\n    this.checkPlayerCollision(spawnedPCBullets);\n    this.checkBaddieCollision(spawnedPCBullets);\n  }\n\n  checkPlayerCollision(spawnedPCBullets) {\n    let spawnedBadBullets = this.badBulletPool.pool.filter(\n      (bullet) => bullet.spawned )\n\n    let hitbox = {\n      x: this.player.hitboxCenter.x,\n      y: this.player.hitboxCenter.y,\n      radius: 12\n    }\n\n    for (var bullIdx = 0; bullIdx < spawnedPCBullets.length; bullIdx++) {\n      let bullet = spawnedPCBullets[bullIdx];\n      if(\n        (this.bulletHitsPC(this.player, hitbox, bullet.startPoint) ||\n        this.bulletHitsPC(this.player, hitbox, bullet.endPoint)) &&\n        this.player.invincibilityFrames < 50\n      ) {\n        this.player.isHit();\n      };\n    }\n\n    for (var bullIdx = 0; bullIdx < spawnedBadBullets.length; bullIdx++) {\n      let bullet = spawnedBadBullets[bullIdx];\n      if(\n        (this.bulletHitsPC(this.player, hitbox, bullet.startPoint) ||\n        this.bulletHitsPC(this.player, hitbox, bullet.endPoint)) &&\n        this.player.invincibilityFrames > 50\n      ) {\n        this.player.isHit();\n        this.drawPlayerHearts();\n      };\n    }\n  }\n\n  bulletHitsPC(player, hitbox, bullet) {\n    hitbox.x = hitbox.x - player.pcFieldWidth / 2 + this.fgCanvas.width / 2;\n    hitbox.y = hitbox.y - player.pcFieldHeight / 2 + this.fgCanvas.height / 2;\n    let distanceFromHitboxToBullet =\n      Math.sqrt(\n        Math.pow(hitbox.x - bullet.x, 2) + Math.pow(hitbox.y - bullet.y, 2)\n      );\n\n    return (\n      distanceFromHitboxToBullet <= hitbox.radius\n    )\n  }\n\n  checkBaddieCollision(spawnedPCBullets) {\n    let spawnedBaddies = this.BaddiePool.pool.filter(\n      (baddie) => baddie.spawned )\n\n    for (let badIdx = 0; badIdx < spawnedBaddies.length; badIdx++) {\n      let baddie = spawnedBaddies[badIdx];\n      for (let bullIdx = 0; bullIdx < spawnedPCBullets.length; bullIdx++) {\n        let bullet = spawnedPCBullets[bullIdx];\n        let drawPoint = baddie.drawPoint;\n        if(\n          this.pcBulletHitsBaddie(baddie, drawPoint, bullet.startPoint) ||\n          this.pcBulletHitsBaddie(baddie, drawPoint, bullet.endPoint)\n        ) {\n          this.updatePlayerScore();\n          baddie.isHit = true;\n        };\n      }\n    }\n  }\n\n  pcBulletHitsBaddie(baddie, drawPoint, bullet) {\n    return (\n      (drawPoint.x <= bullet.x && bullet.x <= drawPoint.x + baddie.width) &&\n      (drawPoint.y <= bullet.y && bullet.y <= drawPoint.y + baddie.height)\n    )\n  }\n\n  clearFGContext() {\n    this.fgCanvas.ctx.clearRect(0, 0, this.fgCanvas.width, this.fgCanvas.height);\n  } // implement dirty rectangles on each sprite?\n\n  clearPCContext() {\n    this.pcCanvas.ctx.clearRect(0, 0, this.pcCanvas.width, this.pcCanvas.height);\n  } // implement dirty rectangles on each sprite?\n}\n\n\nexport default Field;\n","import Field from './field';\n\nconst startGame = (foregroundCanvas, playerCanvas) => {\n  let field = new Field(\n    foregroundCanvas,\n    statsCanvas,\n    playerCanvas);\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let foregroundCanvas = document.getElementById(\"foregroundCanvas\");\n  let playerCanvas = document.getElementById(\"playerCanvas\");\n  startGame(foregroundCanvas, playerCanvas);\n});\n","class Player {\n  constructor(pcCanvas, BulletPool) {\n    this.ctx = pcCanvas.ctx;\n    this.pcFieldWidth = pcCanvas.width;\n    this.pcFieldHeight = pcCanvas.height;\n    this.BulletPool = BulletPool;\n\n    this.velocity = 0;\n    this.acceleration = 0.02;\n    this.maxSpeed = 0.3;\n    this.radius = 50; // The 'track' the player moves along\n    this.fireCharge = 0;\n    this.fireCooldown = 25;\n    this.invincibilityFrames = 50;\n    this.life = 3;\n\n    this.portTheta = -1.23;\n    this.starboardTheta = 1.9106;\n    this.bowTheta = Math.PI / 2;\n    this.computeAllVerticies();\n\n    this.draw = this.draw.bind(this);\n    this.fire = this.fire.bind(this);\n  }\n\n  computeAllVerticies() {\n    this.portVertex = this.computePortVertex();\n    this.starboardVertex = this.computeStarboardVertex();\n    this.bowVertex = this.computeCenterPoints(-15);\n    this.hitboxCenter = this.computeCenterPoints(-35);\n  }\n\n  computeStarboardVertex() {\n    return ({\n      x: Math.cos(this.starboardTheta) * this.radius + this.pcFieldWidth / 2,\n      y: -Math.sin(this.starboardTheta) * this.radius + this.pcFieldHeight / 2\n    })\n  }\n\n  computePortVertex() {\n    return ({\n      x: Math.cos(this.portTheta) * this.radius  + this.pcFieldWidth / 2,\n      y: Math.sin(this.portTheta) * this.radius  + this.pcFieldHeight / 2\n    })\n  }\n\n  computeCenterPoints(radius) {\n    return ({\n      x: Math.cos(this.bowTheta) * radius  + this.pcFieldWidth / 2,\n      y: Math.sin(this.bowTheta) * radius  + this.pcFieldHeight / 2\n    })\n  }\n\n  move(keyStatus) {\n    this.fireCharge++; // increments once every frame\n    this.invincibilityFrames++; // increments once every frame\n    if(keyStatus.left) {\n      if(this.velocity <= this.maxSpeed) this.velocity += this.acceleration;\n      this.starboardTheta += this.velocity;\n      this.portTheta -= this.velocity;\n      this.bowTheta -= this.velocity;\n    } else if(keyStatus.right) {\n      if(this.velocity <= this.maxSpeed) this.velocity += this.acceleration;\n      this.starboardTheta -= this.velocity;\n      this.portTheta += this.velocity;\n      this.bowTheta += this.velocity;\n    } else {\n      this.velocity = 0;\n    }\n\n    if(keyStatus.fire && this.fireCharge >= this.fireCooldown) this.fire();\n  }\n\n  fire() {\n    this.fireCharge = 0;\n    let bulletData = {\n      theta: this.bowTheta,\n      speed: 4\n    }\n    this.BulletPool.get(bulletData);\n  }\n\n  draw() {\n    this.computeAllVerticies();\n\n    this.ctx.beginPath();\n\n    if(this.invincibilityFrames < 50) {\n      this.ctx.fillStyle = 'red';\n    } else {\n      this.ctx.fillStyle = 'black';\n    }\n\n    this.ctx.moveTo(this.starboardVertex.x, this.starboardVertex.y);\n    this.ctx.lineTo(this.portVertex.x, this.portVertex.y);\n    this.ctx.lineTo(this.bowVertex.x, this.bowVertex.y);\n    this.ctx.fill();\n  }\n\n  isHit() {\n    this.life -= 1;\n    this.invincibilityFrames = 0;\n  }\n}\n\nexport default Player;\n","import { Sprite, ObjectPool } from './utilities';\nimport Bullet from './bullet';\n\nexport default class BulletPool extends ObjectPool {\n  constructor(size, fgCanvas) {\n    super(size);\n\n    for(let i = 0; i < size; i++) {\n      let bullet = new PlayerBullet(fgCanvas);\n      this.pool.push(bullet);\n    }\n  }\n};\n\nclass PlayerBullet extends Bullet {\n  constructor(fgCanvas) {\n    super(fgCanvas, 'player');\n  }\n\n  spawn(bulletData) {\n    this.pathAngle = bulletData.theta;\n    this.startPoint = this.computePoint(this.startRadius);\n    this.endPoint = this.computePoint(this.endRadius);\n    this.speed = bulletData.speed;\n    this.spawned = true;\n  }\n};\n","export class ObjectPool {\n  constructor(size) {\n    this.size = size;\n    this.pool = [];\n  }\n\n  get(objectData) {\n    if(!this.pool[this.size - 1].spawned) {\n      this.pool[this.size - 1].spawn(objectData);\n      this.pool.unshift(this.pool.pop());\n    }\n  }\n\n  draw(type) {\n    for (let i = 0; i < this.size; i++) {\n      if(this.pool[i].spawned) {\n        if(this.pool[i].draw(this.BulletPool)) {\n          this.pool[i].setDefaultValues(type);\n          this.pool.push((this.pool.splice(i,1))[0]);\n        }\n      } else {\n        break;\n      }\n    }\n  }\n};\n\nexport class Sprite {\n  constructor(context, image, srcWidth, srcHeight, srcX, srcY) {\n    this.context = context;\n    this.image = image;\n    this.srcX = srcX;\n    this.srcY = srcY;\n    this.srcWidth = srcWidth;\n    this.srcHeight = srcHeight;\n\n    this.draw = this.draw.bind(this);\n  }\n\n  draw(drawPointX, drawPointY) {\n    this.context.drawImage(\n      this.image,\n      this.srcX,\n      this.srcY,\n      this.srcWidth,\n      this.srcHeight,\n      drawPointX,\n      drawPointY,\n      this.srcWidth,  // drawn image width, same as src\n      this.srcHeight  // drawn image height, same as src\n    )\n  }\n}\n\nexport class ImageStore {\n  constructor(field) {\n    this.field = field;\n    this.bullet = { image: new Image() }\n    this.redDemon = {\n      image: new Image(),\n      width: 21,\n      height: 30,\n      srcX: 0,\n      srcY: 0\n    }\n    this.heart = { image: new Image() }\n    this.numImages = 3;\n    this.numLoaded = 0;\n    this.ready = false;\n\n    this.bullet.image.onload = () => {\n      this.imageLoaded();\n    }\n    this.redDemon.image.onload = () => {\n      this.imageLoaded();\n    }\n    this.heart.image.onload = () => {\n      this.imageLoaded();\n    }\n\n    this.bullet.image.src = 'assets/sprites/bullet.png';\n    this.redDemon.image.src = 'assets/sprites/demon_test.png';\n    this.heart.image.src = 'assets/sprites/heart.png';\n  }\n\n  imageLoaded() {\n    this.numLoaded++;\n    if(this.numLoaded === this.numImages) this.field.startRound();\n  }\n}\n"],"sourceRoot":""}